<?php
namespace Vaskovsky\WebApplicationExample; class AccountPage extends Page { protected function getRole() { return "admin"; } protected function create() { return [ "id" => "", "username" => "", "password" => "", "role_admin" => false ]; } protected function sanitize($x) { return [ "id" => (int) trim(@$x->id), "username" => trim(@$x->username), "password" => trim(@$x->password), "role_admin" => (bool) trim(@$x->role_admin) ]; } protected function validateUpdate($x) { if (empty($x->password)) { if (empty($x->username)) return "Empty username"; } } protected function validateInsert($x) { if (empty($x->password)) return "Empty password"; return $this->validateUpdate($x); } protected function select($x) { $pdo = $this->getPDO(); $sql = "select * from Account"; return $pdo->query($sql); } protected function get($x) { $pdo = $this->getPDO(); $sql = "select * from Account where "; $sql .= "id = " . (int) $x->id; return $pdo->query($sql)->fetchObject(); } protected function insert($x) { $pdo = $this->getPDO(); $sql = "insert into Account ("; $sql .= "username, password, role_admin"; $sql .= ") values ("; $sql .= $pdo->quote($x->username) . ", "; $sql .= $pdo->quote($x->password) . ", "; $sql .= ($x->role_admin ? "true" : "false") . ")"; return $pdo->exec($sql); } protected function update($x) { $pdo = $this->getPDO(); $sql = "update Account set "; if(empty($x->password)) { $sql .= "username = " . $pdo->quote($x->username) . ", "; $sql .= "role_admin = " . ($x->role_admin ? "true" : "false") . " "; } else { $sql .= "password = " . $pdo->quote($x->password); } $sql .= "where id = " . (int) $x->id; return $pdo->exec($sql); } protected function delete($x) { $pdo = $this->getPDO(); $sql = "delete from Account where id = " . (int) $x->id; return $pdo->exec($sql); } use \Vaskovsky\WebApplication\CatalogPage; } 